<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>sanchez.sanchez.sergio</groupId>
    <artifactId>bulltect-integration-platform</artifactId>
    <version>0.0.55-SNAPSHOT</version>
    <packaging>${packaging.type}</packaging>
    <name>BullTect Integration Platform</name>
    <description>BullTect Integration Platform. EIPs patterns with Spring Integration.</description>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <org.mapstruct.version>1.1.0.Final</org.mapstruct.version>
        <jInstagram.version>1.2.1</jInstagram.version>
        <youtube.data.api.client.version>v3-rev183-1.22.0</youtube.data.api.client.version>
        <springfox.version>2.4.0</springfox.version>
        <bootstrap.version>3.3.7</bootstrap.version>
        <jquery.version>1.11.1</jquery.version>
        <font.awesome.version>4.2.0</font.awesome.version>
        <jjwt.version>0.7.0</jjwt.version>
        <sockjs.client.version>1.0.2</sockjs.client.version>
        <stomp.websocket.version>2.3.3</stomp.websocket.version>

    </properties>
    
    <!--  Profiles -->
    
    
    <!-- Production Profile -->
    
    <profiles>
		<profile>
			<id>production</id>
			
			<properties>
				<packaging.type>war</packaging.type>
        		<activatedProperties>prod</activatedProperties>
        		<start-class>es.bisite.usal.bulltect.BullTectIntegrationPlatformProductionApplication</start-class>
        		<!-- asciidoctor -->
		        <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
		        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		        <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
		        <generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
		        <!-- swagger -->
		        <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		        <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
		        <swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
		        <swagger2markup.version>1.2.0</swagger2markup.version>
			</properties>
			
		
			
			<dependencies>
				<dependency>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-starter-tomcat</artifactId>
		            <scope>provided</scope>
		        </dependency>
		        <dependency>
				    <groupId>org.springframework.boot</groupId>
				    <artifactId>spring-boot-starter-jdbc</artifactId>
				    <exclusions>
				        <exclusion>
				            <groupId>org.apache.tomcat</groupId>
				            <artifactId>tomcat-jdbc</artifactId>
				        </exclusion>
				    </exclusions>
				</dependency>
				<dependency>
				  <groupId>com.zaxxer</groupId>
				  <artifactId>HikariCP</artifactId>
				</dependency>
			</dependencies>
			
			<build>
			
				<finalName>bulltect-integration-platform</finalName>
			
				<resources>
			        <resource>
			            <directory>src/main/resources</directory>
			            <filtering>true</filtering>
			            <excludes>
			                <exclude>dev/**</exclude>
			            </excludes>
			        </resource>
			    </resources>
			
				<plugins>
					<plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <configuration>
		                    <systemPropertyVariables>
		                        <io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
		                        <io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
		                    </systemPropertyVariables>
		                </configuration>
		            </plugin>
		           
		            
		            <!--  Swagger Maven Plugin -->
		            <plugin>
		                <groupId>com.github.kongchen</groupId>
		                <artifactId>swagger-maven-plugin</artifactId>
		                <version>3.1.1</version>
		                <configuration>
		                    <apiSources>
		                        <apiSource>
		                            <springmvc>true</springmvc>
		                            <locations>es.bisite.usal.bulltect.web.rest.controller</locations>
		                            <schemes>http,https</schemes>
		                            <host>bulltect-integration-platform</host>
		                            <basePath>/api</basePath>
		                            <info>
		                                <title>REST API for BullTect</title>
		                                <version>v1</version>
		                                <description>
		                                	La plataforma ofrece iteroperabilidad con otros sistemas, permite que la información de los medios sociales, usuarios objeto del análisis, padres, colegios. 
		                                	Pueda ser actualizada, eliminada, consultada y guardada. Estos servicios no son de libre acceso, el padre/tutor deberá demostrar su identidad y obtener un token de acceso a la API. 
		                                	El sistema solo le permitirá consultar y manipular la información de los usuarios tutorizados.
		                                </description>
		                                <termsOfService>TOS</termsOfService>
		                                <contact>
		                                    <email>bisite@usal.es</email>
		                                    <name>BISITE Research Group - University of Salamanca</name>
		                                    <url>https://bisite.usal.es/es</url>
		                                </contact>
		                                <license>
		                                    <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		                                    <name>Apache 2.0</name>
		                                </license>
		                            </info>
		                            <outputPath>${swagger.output.dir}/document.html</outputPath>
		                            <swaggerDirectory>${swagger.output.dir}</swaggerDirectory>
		                            <outputFormats>yaml,json</outputFormats>
		                        </apiSource>
		                    </apiSources>
		                </configuration>
		                <executions>
		                    <execution>
		                        <phase>prepare-package</phase>
		                        <goals>
		                            <goal>generate</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		            
		           <!-- swagger2markup plugin to generate asciidoc -->
		           <plugin>
		                <groupId>io.github.swagger2markup</groupId>
		                <artifactId>swagger2markup-maven-plugin</artifactId>
		                <version>${swagger2markup.version}</version>
		                <configuration>
		                    <swaggerInput>${swagger.input}</swaggerInput>
		                    <outputDir>${generated.asciidoc.directory}</outputDir>
		                    <config>
		                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
		                        <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
		
		                        <swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>
		                        <swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>
		                        <swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
		                        <swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath>
		
		                        <swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
		                        <swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets>
		                    </config>
		                </configuration>
		                <executions>
		                    <execution>
		                        <phase>prepare-package</phase>
		                        <goals>
		                            <goal>convertSwagger2markup</goal>
		                        </goals>
		                    </execution>
		                </executions>
		                <dependencies>
		                    <dependency>
		                        <groupId>io.github.swagger2markup</groupId>
		                        <artifactId>swagger2markup-import-files-ext</artifactId>
		                        <version>${swagger2markup.version}</version>
		                    </dependency>
		                    <dependency>
		                        <groupId>io.github.swagger2markup</groupId>
		                        <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
		                        <version>${swagger2markup.version}</version>
		                    </dependency>
		                </dependencies>
		            </plugin>
		            
		            <!-- Run the generated asciidoc through Asciidoctor to generate
		                 other documentation types, such as PDFs or HTML5 -->
		            <plugin>
		                <groupId>org.asciidoctor</groupId>
		                <artifactId>asciidoctor-maven-plugin</artifactId>
		                <version>1.5.3</version>
		                <!-- Include Asciidoctor PDF for pdf generation -->
		                <dependencies>
		                    <dependency>
		                        <groupId>org.asciidoctor</groupId>
		                        <artifactId>asciidoctorj-pdf</artifactId>
		                        <version>1.5.0-alpha.10.1</version>
		                    </dependency>
		                    <dependency>
		                        <groupId>org.jruby</groupId>
		                        <artifactId>jruby-complete</artifactId>
		                        <version>1.7.21</version>
		                    </dependency>
		                </dependencies>
		                <!-- Configure generic document generation settings -->
		                <configuration>
		                    <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
		                    <sourceDocumentName>index.adoc</sourceDocumentName>
		                    <attributes>
		                        <doctype>book</doctype>
		                        <toc>left</toc>
		                        <toclevels>3</toclevels>
		                        <numbered></numbered>
		                        <hardbreaks></hardbreaks>
		                        <sectlinks></sectlinks>
		                        <sectanchors></sectanchors>
		                        <generated>${generated.asciidoc.directory}</generated>
		                    </attributes>
		                </configuration>
		                <executions>
		                    <execution>
		                        <id>output-html</id>
		                        <phase>prepare-package</phase>
		                        <goals>
		                            <goal>process-asciidoc</goal>
		                        </goals>
		                        <configuration>
		                            <backend>html5</backend>
		                            <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
		                        </configuration>
		                    </execution>
		
		                    <execution>
		                        <id>output-pdf</id>
		                        <phase>prepare-package</phase>
		                        <goals>
		                            <goal>process-asciidoc</goal>
		                        </goals>
		                        <configuration>
		                            <backend>pdf</backend>
		                            <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
		                        </configuration>
		                    </execution>
		
		                </executions>
		            </plugin>
		            
		             <!-- copy the generated documents -->
		            <plugin>
		                <artifactId>maven-resources-plugin</artifactId>
		                <version>2.7</version>
		                <executions>
		                    <execution>
		                        <id>copy-resources</id>
		                        <phase>prepare-package</phase>
		                        <goals>
		                            <goal>copy-resources</goal>
		                        </goals>
		                        <configuration>
		                            <outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
		                            <resources>
		                                <resource>
		                                    <directory>${asciidoctor.html.output.directory}</directory>
		                                </resource>
		                                <resource>
		                                    <directory>${asciidoctor.pdf.output.directory}</directory>
		                                </resource>
		                            </resources>
		                        </configuration>
		                    </execution>
		                </executions>
		            </plugin>
		            
		            
		            
				</plugins>
			</build>
			
			
		</profile>
		
		
		<!-- Development Profile -->
		
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
				<activatedProperties>dev</activatedProperties>
				<start-class>es.bisite.usal.bulltect.BullTectIntegrationPlatformDevelopmentApplication</start-class>
			</properties>
			<dependencies>
				<dependency>
		            <groupId>de.flapdoodle.embed</groupId>
		            <artifactId>de.flapdoodle.embed.mongo</artifactId>
		        </dependency>
		        <dependency>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-starter-tomcat</artifactId>
		            <exclusions>
			            <exclusion>
			                <groupId>commons-io</groupId>
			                <artifactId>commons-io</artifactId>
			            </exclusion>
			        </exclusions>
		        </dependency>
		        <!-- Swagger UI -->
		        <dependency>  
		            <groupId>io.springfox</groupId>
		            <artifactId>springfox-swagger-ui</artifactId>
		            <version>${springfox.version}</version>
		        </dependency>
			</dependencies>
		</profile>
	</profiles>
    
    
    <dependencies>
    	<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.4</version>
		</dependency>
    	<dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-collections4</artifactId>
		    <version>4.1</version>
		</dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
    	<!-- Persistence -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <!--  Integration -->
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-mongodb</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- Spring Integration - Java DSL -->
        <dependency>
          <groupId>org.springframework.integration</groupId>
          <artifactId>spring-integration-java-dsl</artifactId>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>compile</scope>
        </dependency>
        <!-- Spring starter web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- and the 'Thymeleaf Layout Dialect'  -->
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.restfb</groupId>
            <artifactId>restfb</artifactId>
            <version>2.0.0-rc.3</version>
        </dependency>
        <!-- Mail -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!-- A Java library for the Instagram API.  -->
        <dependency>
            <groupId>com.sachinhandiekar</groupId>
            <artifactId>jInstagram</artifactId>
            <version>${jInstagram.version}</version>
        </dependency>
        <!-- Youtube Data API Client -->
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-youtube</artifactId>
            <version>${youtube.data.api.client.version}</version>
        </dependency>
        <!--  Bean Mapping -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <!-- Swagger -->

        <dependency>  
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <!-- web jars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>font-awesome</artifactId>
            <version>${font.awesome.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>${sockjs.client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>${stomp.websocket.version}</version>
        </dependency>
        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mobile</artifactId>
        </dependency>
        <!--  Jasypt integration for Spring boot  -->
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>1.14</version>
        </dependency>
        <!-- Spring Batch -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
        <!-- Spring Web Socket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        
        <!--  Lib Phone Number -->
        <dependency>
		    <groupId>com.googlecode.libphonenumber</groupId>
		    <artifactId>libphonenumber</artifactId>
		    <version>8.8.0</version>
		</dependency>
		
		<!-- PrettyTime is an OpenSource time formatting library. Completely customizable, it creates human readable, relative timestamps like those seen on Digg, Twitter, and Facebook. Get started “right now!” and in over 33 languages! -->
		<dependency>
		   <groupId>org.ocpsoft.prettytime</groupId>
		   <artifactId>prettytime</artifactId>
		   <version>3.2.7.Final</version>
		</dependency>
        
    </dependencies>
    
    <!-- One of the dependencies (markdown_to_asciidoc) of swagger2markup-maven-plugin need below repository -->
    <pluginRepositories>
        <pluginRepository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </pluginRepository>
    </pluginRepositories>
    
    
    <build>
    
    
    
        <plugins>
        
        	<!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            
            <!-- Maven Compilar Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version><!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <source>1.8</source> <!-- or higher, depending on your project -->
                    <target>1.8</target> <!-- or higher, depending on your project -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <compilerArg>
                            -Amapstruct.suppressGeneratorTimestamp=true
                        </compilerArg>
                        <compilerArg>
                            -Amapstruct.suppressGeneratorVersionInfoComment=true
                        </compilerArg>
                        <compilerArg>
                            -Amapstruct.defaultComponentModel=spring
                        </compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
            
            
            
            <!-- copy dependencies to the lib directory -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            
        </plugins>
    </build>
</project>
